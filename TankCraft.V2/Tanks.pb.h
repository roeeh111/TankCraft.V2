// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tanks.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_Tanks_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_Tanks_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_Tanks_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_Tanks_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Tanks_2eproto;
namespace ProtoMessaging {
class AddRemoveEntityMessage;
class AddRemoveEntityMessageDefaultTypeInternal;
extern AddRemoveEntityMessageDefaultTypeInternal _AddRemoveEntityMessage_default_instance_;
class ClientNameComponent;
class ClientNameComponentDefaultTypeInternal;
extern ClientNameComponentDefaultTypeInternal _ClientNameComponent_default_instance_;
class ControlComponent;
class ControlComponentDefaultTypeInternal;
extern ControlComponentDefaultTypeInternal _ControlComponent_default_instance_;
class ControlMessage;
class ControlMessageDefaultTypeInternal;
extern ControlMessageDefaultTypeInternal _ControlMessage_default_instance_;
class HealthComponent;
class HealthComponentDefaultTypeInternal;
extern HealthComponentDefaultTypeInternal _HealthComponent_default_instance_;
class MapObjectComponent;
class MapObjectComponentDefaultTypeInternal;
extern MapObjectComponentDefaultTypeInternal _MapObjectComponent_default_instance_;
class PositionComponent;
class PositionComponentDefaultTypeInternal;
extern PositionComponentDefaultTypeInternal _PositionComponent_default_instance_;
class ScoreComponent;
class ScoreComponentDefaultTypeInternal;
extern ScoreComponentDefaultTypeInternal _ScoreComponent_default_instance_;
class UpdateEntityMessage;
class UpdateEntityMessageDefaultTypeInternal;
extern UpdateEntityMessageDefaultTypeInternal _UpdateEntityMessage_default_instance_;
}  // namespace ProtoMessaging
PROTOBUF_NAMESPACE_OPEN
template<> ::ProtoMessaging::AddRemoveEntityMessage* Arena::CreateMaybeMessage<::ProtoMessaging::AddRemoveEntityMessage>(Arena*);
template<> ::ProtoMessaging::ClientNameComponent* Arena::CreateMaybeMessage<::ProtoMessaging::ClientNameComponent>(Arena*);
template<> ::ProtoMessaging::ControlComponent* Arena::CreateMaybeMessage<::ProtoMessaging::ControlComponent>(Arena*);
template<> ::ProtoMessaging::ControlMessage* Arena::CreateMaybeMessage<::ProtoMessaging::ControlMessage>(Arena*);
template<> ::ProtoMessaging::HealthComponent* Arena::CreateMaybeMessage<::ProtoMessaging::HealthComponent>(Arena*);
template<> ::ProtoMessaging::MapObjectComponent* Arena::CreateMaybeMessage<::ProtoMessaging::MapObjectComponent>(Arena*);
template<> ::ProtoMessaging::PositionComponent* Arena::CreateMaybeMessage<::ProtoMessaging::PositionComponent>(Arena*);
template<> ::ProtoMessaging::ScoreComponent* Arena::CreateMaybeMessage<::ProtoMessaging::ScoreComponent>(Arena*);
template<> ::ProtoMessaging::UpdateEntityMessage* Arena::CreateMaybeMessage<::ProtoMessaging::UpdateEntityMessage>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace ProtoMessaging {

// ===================================================================

class ControlComponent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.ControlComponent) */ {
 public:
  inline ControlComponent() : ControlComponent(nullptr) {}
  virtual ~ControlComponent();

  ControlComponent(const ControlComponent& from);
  ControlComponent(ControlComponent&& from) noexcept
    : ControlComponent() {
    *this = ::std::move(from);
  }

  inline ControlComponent& operator=(const ControlComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlComponent& operator=(ControlComponent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ControlComponent& default_instance();

  static inline const ControlComponent* internal_default_instance() {
    return reinterpret_cast<const ControlComponent*>(
               &_ControlComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ControlComponent& a, ControlComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(ControlComponent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ControlComponent* New() const final {
    return CreateMaybeMessage<ControlComponent>(nullptr);
  }

  ControlComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ControlComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ControlComponent& from);
  void MergeFrom(const ControlComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ControlComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.ControlComponent";
  }
  protected:
  explicit ControlComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUpFieldNumber = 1,
    kDownFieldNumber = 2,
    kLeftFieldNumber = 3,
    kRightFieldNumber = 4,
    kNetidFieldNumber = 5,
  };
  // bool up = 1;
  void clear_up();
  bool up() const;
  void set_up(bool value);
  private:
  bool _internal_up() const;
  void _internal_set_up(bool value);
  public:

  // bool down = 2;
  void clear_down();
  bool down() const;
  void set_down(bool value);
  private:
  bool _internal_down() const;
  void _internal_set_down(bool value);
  public:

  // bool left = 3;
  void clear_left();
  bool left() const;
  void set_left(bool value);
  private:
  bool _internal_left() const;
  void _internal_set_left(bool value);
  public:

  // bool right = 4;
  void clear_right();
  bool right() const;
  void set_right(bool value);
  private:
  bool _internal_right() const;
  void _internal_set_right(bool value);
  public:

  // int32 netid = 5;
  void clear_netid();
  ::PROTOBUF_NAMESPACE_ID::int32 netid() const;
  void set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_netid() const;
  void _internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.ControlComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool up_;
  bool down_;
  bool left_;
  bool right_;
  ::PROTOBUF_NAMESPACE_ID::int32 netid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class PositionComponent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.PositionComponent) */ {
 public:
  inline PositionComponent() : PositionComponent(nullptr) {}
  virtual ~PositionComponent();

  PositionComponent(const PositionComponent& from);
  PositionComponent(PositionComponent&& from) noexcept
    : PositionComponent() {
    *this = ::std::move(from);
  }

  inline PositionComponent& operator=(const PositionComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline PositionComponent& operator=(PositionComponent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PositionComponent& default_instance();

  static inline const PositionComponent* internal_default_instance() {
    return reinterpret_cast<const PositionComponent*>(
               &_PositionComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(PositionComponent& a, PositionComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(PositionComponent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(PositionComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PositionComponent* New() const final {
    return CreateMaybeMessage<PositionComponent>(nullptr);
  }

  PositionComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PositionComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PositionComponent& from);
  void MergeFrom(const PositionComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PositionComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.PositionComponent";
  }
  protected:
  explicit PositionComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPrevxFieldNumber = 1,
    kPrevyFieldNumber = 2,
    kCurxFieldNumber = 3,
    kCuryFieldNumber = 4,
    kNetidFieldNumber = 5,
  };
  // int32 prevx = 1;
  void clear_prevx();
  ::PROTOBUF_NAMESPACE_ID::int32 prevx() const;
  void set_prevx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_prevx() const;
  void _internal_set_prevx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 prevy = 2;
  void clear_prevy();
  ::PROTOBUF_NAMESPACE_ID::int32 prevy() const;
  void set_prevy(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_prevy() const;
  void _internal_set_prevy(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 curx = 3;
  void clear_curx();
  ::PROTOBUF_NAMESPACE_ID::int32 curx() const;
  void set_curx(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_curx() const;
  void _internal_set_curx(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 cury = 4;
  void clear_cury();
  ::PROTOBUF_NAMESPACE_ID::int32 cury() const;
  void set_cury(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_cury() const;
  void _internal_set_cury(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 netid = 5;
  void clear_netid();
  ::PROTOBUF_NAMESPACE_ID::int32 netid() const;
  void set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_netid() const;
  void _internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.PositionComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 prevx_;
  ::PROTOBUF_NAMESPACE_ID::int32 prevy_;
  ::PROTOBUF_NAMESPACE_ID::int32 curx_;
  ::PROTOBUF_NAMESPACE_ID::int32 cury_;
  ::PROTOBUF_NAMESPACE_ID::int32 netid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class MapObjectComponent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.MapObjectComponent) */ {
 public:
  inline MapObjectComponent() : MapObjectComponent(nullptr) {}
  virtual ~MapObjectComponent();

  MapObjectComponent(const MapObjectComponent& from);
  MapObjectComponent(MapObjectComponent&& from) noexcept
    : MapObjectComponent() {
    *this = ::std::move(from);
  }

  inline MapObjectComponent& operator=(const MapObjectComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline MapObjectComponent& operator=(MapObjectComponent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MapObjectComponent& default_instance();

  static inline const MapObjectComponent* internal_default_instance() {
    return reinterpret_cast<const MapObjectComponent*>(
               &_MapObjectComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(MapObjectComponent& a, MapObjectComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(MapObjectComponent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(MapObjectComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MapObjectComponent* New() const final {
    return CreateMaybeMessage<MapObjectComponent>(nullptr);
  }

  MapObjectComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MapObjectComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MapObjectComponent& from);
  void MergeFrom(const MapObjectComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MapObjectComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.MapObjectComponent";
  }
  protected:
  explicit MapObjectComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kMapCharFieldNumber = 1,
    kNetidFieldNumber = 2,
  };
  // bytes mapChar = 1;
  void clear_mapchar();
  const std::string& mapchar() const;
  void set_mapchar(const std::string& value);
  void set_mapchar(std::string&& value);
  void set_mapchar(const char* value);
  void set_mapchar(const void* value, size_t size);
  std::string* mutable_mapchar();
  std::string* release_mapchar();
  void set_allocated_mapchar(std::string* mapchar);
  private:
  const std::string& _internal_mapchar() const;
  void _internal_set_mapchar(const std::string& value);
  std::string* _internal_mutable_mapchar();
  public:

  // int32 netid = 2;
  void clear_netid();
  ::PROTOBUF_NAMESPACE_ID::int32 netid() const;
  void set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_netid() const;
  void _internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.MapObjectComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr mapchar_;
  ::PROTOBUF_NAMESPACE_ID::int32 netid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class ScoreComponent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.ScoreComponent) */ {
 public:
  inline ScoreComponent() : ScoreComponent(nullptr) {}
  virtual ~ScoreComponent();

  ScoreComponent(const ScoreComponent& from);
  ScoreComponent(ScoreComponent&& from) noexcept
    : ScoreComponent() {
    *this = ::std::move(from);
  }

  inline ScoreComponent& operator=(const ScoreComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ScoreComponent& operator=(ScoreComponent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ScoreComponent& default_instance();

  static inline const ScoreComponent* internal_default_instance() {
    return reinterpret_cast<const ScoreComponent*>(
               &_ScoreComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(ScoreComponent& a, ScoreComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(ScoreComponent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ScoreComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ScoreComponent* New() const final {
    return CreateMaybeMessage<ScoreComponent>(nullptr);
  }

  ScoreComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ScoreComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ScoreComponent& from);
  void MergeFrom(const ScoreComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ScoreComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.ScoreComponent";
  }
  protected:
  explicit ScoreComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPointsFieldNumber = 1,
    kNetidFieldNumber = 2,
  };
  // int32 points = 1;
  void clear_points();
  ::PROTOBUF_NAMESPACE_ID::int32 points() const;
  void set_points(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_points() const;
  void _internal_set_points(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 netid = 2;
  void clear_netid();
  ::PROTOBUF_NAMESPACE_ID::int32 netid() const;
  void set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_netid() const;
  void _internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.ScoreComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 points_;
  ::PROTOBUF_NAMESPACE_ID::int32 netid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class ClientNameComponent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.ClientNameComponent) */ {
 public:
  inline ClientNameComponent() : ClientNameComponent(nullptr) {}
  virtual ~ClientNameComponent();

  ClientNameComponent(const ClientNameComponent& from);
  ClientNameComponent(ClientNameComponent&& from) noexcept
    : ClientNameComponent() {
    *this = ::std::move(from);
  }

  inline ClientNameComponent& operator=(const ClientNameComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline ClientNameComponent& operator=(ClientNameComponent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ClientNameComponent& default_instance();

  static inline const ClientNameComponent* internal_default_instance() {
    return reinterpret_cast<const ClientNameComponent*>(
               &_ClientNameComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ClientNameComponent& a, ClientNameComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(ClientNameComponent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ClientNameComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ClientNameComponent* New() const final {
    return CreateMaybeMessage<ClientNameComponent>(nullptr);
  }

  ClientNameComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ClientNameComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ClientNameComponent& from);
  void MergeFrom(const ClientNameComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ClientNameComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.ClientNameComponent";
  }
  protected:
  explicit ClientNameComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kNetidFieldNumber = 2,
  };
  // string name = 1;
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // int32 netid = 2;
  void clear_netid();
  ::PROTOBUF_NAMESPACE_ID::int32 netid() const;
  void set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_netid() const;
  void _internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.ClientNameComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 netid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class HealthComponent PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.HealthComponent) */ {
 public:
  inline HealthComponent() : HealthComponent(nullptr) {}
  virtual ~HealthComponent();

  HealthComponent(const HealthComponent& from);
  HealthComponent(HealthComponent&& from) noexcept
    : HealthComponent() {
    *this = ::std::move(from);
  }

  inline HealthComponent& operator=(const HealthComponent& from) {
    CopyFrom(from);
    return *this;
  }
  inline HealthComponent& operator=(HealthComponent&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const HealthComponent& default_instance();

  static inline const HealthComponent* internal_default_instance() {
    return reinterpret_cast<const HealthComponent*>(
               &_HealthComponent_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(HealthComponent& a, HealthComponent& b) {
    a.Swap(&b);
  }
  inline void Swap(HealthComponent* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(HealthComponent* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline HealthComponent* New() const final {
    return CreateMaybeMessage<HealthComponent>(nullptr);
  }

  HealthComponent* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<HealthComponent>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const HealthComponent& from);
  void MergeFrom(const HealthComponent& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(HealthComponent* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.HealthComponent";
  }
  protected:
  explicit HealthComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHpFieldNumber = 1,
    kNetidFieldNumber = 2,
  };
  // int32 hp = 1;
  void clear_hp();
  ::PROTOBUF_NAMESPACE_ID::int32 hp() const;
  void set_hp(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_hp() const;
  void _internal_set_hp(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // int32 netid = 2;
  void clear_netid();
  ::PROTOBUF_NAMESPACE_ID::int32 netid() const;
  void set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_netid() const;
  void _internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.HealthComponent)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::int32 hp_;
  ::PROTOBUF_NAMESPACE_ID::int32 netid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class ControlMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.ControlMessage) */ {
 public:
  inline ControlMessage() : ControlMessage(nullptr) {}
  virtual ~ControlMessage();

  ControlMessage(const ControlMessage& from);
  ControlMessage(ControlMessage&& from) noexcept
    : ControlMessage() {
    *this = ::std::move(from);
  }

  inline ControlMessage& operator=(const ControlMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline ControlMessage& operator=(ControlMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ControlMessage& default_instance();

  static inline const ControlMessage* internal_default_instance() {
    return reinterpret_cast<const ControlMessage*>(
               &_ControlMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(ControlMessage& a, ControlMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(ControlMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ControlMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ControlMessage* New() const final {
    return CreateMaybeMessage<ControlMessage>(nullptr);
  }

  ControlMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ControlMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ControlMessage& from);
  void MergeFrom(const ControlMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ControlMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.ControlMessage";
  }
  protected:
  explicit ControlMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kControlFieldNumber = 3,
    kTimestampFieldNumber = 2,
  };
  // bytes id = 1;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const void* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // .ProtoMessaging.ControlComponent control = 3;
  bool has_control() const;
  private:
  bool _internal_has_control() const;
  public:
  void clear_control();
  const ::ProtoMessaging::ControlComponent& control() const;
  ::ProtoMessaging::ControlComponent* release_control();
  ::ProtoMessaging::ControlComponent* mutable_control();
  void set_allocated_control(::ProtoMessaging::ControlComponent* control);
  private:
  const ::ProtoMessaging::ControlComponent& _internal_control() const;
  ::ProtoMessaging::ControlComponent* _internal_mutable_control();
  public:
  void unsafe_arena_set_allocated_control(
      ::ProtoMessaging::ControlComponent* control);
  ::ProtoMessaging::ControlComponent* unsafe_arena_release_control();

  // int64 timestamp = 2;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.ControlMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::ProtoMessaging::ControlComponent* control_;
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class AddRemoveEntityMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.AddRemoveEntityMessage) */ {
 public:
  inline AddRemoveEntityMessage() : AddRemoveEntityMessage(nullptr) {}
  virtual ~AddRemoveEntityMessage();

  AddRemoveEntityMessage(const AddRemoveEntityMessage& from);
  AddRemoveEntityMessage(AddRemoveEntityMessage&& from) noexcept
    : AddRemoveEntityMessage() {
    *this = ::std::move(from);
  }

  inline AddRemoveEntityMessage& operator=(const AddRemoveEntityMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddRemoveEntityMessage& operator=(AddRemoveEntityMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const AddRemoveEntityMessage& default_instance();

  static inline const AddRemoveEntityMessage* internal_default_instance() {
    return reinterpret_cast<const AddRemoveEntityMessage*>(
               &_AddRemoveEntityMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(AddRemoveEntityMessage& a, AddRemoveEntityMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(AddRemoveEntityMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddRemoveEntityMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline AddRemoveEntityMessage* New() const final {
    return CreateMaybeMessage<AddRemoveEntityMessage>(nullptr);
  }

  AddRemoveEntityMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<AddRemoveEntityMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const AddRemoveEntityMessage& from);
  void MergeFrom(const AddRemoveEntityMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AddRemoveEntityMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.AddRemoveEntityMessage";
  }
  protected:
  explicit AddRemoveEntityMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
    kNetidFieldNumber = 3,
  };
  // bytes id = 1;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const void* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // int64 timestamp = 2;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // int32 netid = 3;
  void clear_netid();
  ::PROTOBUF_NAMESPACE_ID::int32 netid() const;
  void set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_netid() const;
  void _internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.AddRemoveEntityMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 netid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// -------------------------------------------------------------------

class UpdateEntityMessage PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:ProtoMessaging.UpdateEntityMessage) */ {
 public:
  inline UpdateEntityMessage() : UpdateEntityMessage(nullptr) {}
  virtual ~UpdateEntityMessage();

  UpdateEntityMessage(const UpdateEntityMessage& from);
  UpdateEntityMessage(UpdateEntityMessage&& from) noexcept
    : UpdateEntityMessage() {
    *this = ::std::move(from);
  }

  inline UpdateEntityMessage& operator=(const UpdateEntityMessage& from) {
    CopyFrom(from);
    return *this;
  }
  inline UpdateEntityMessage& operator=(UpdateEntityMessage&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const UpdateEntityMessage& default_instance();

  static inline const UpdateEntityMessage* internal_default_instance() {
    return reinterpret_cast<const UpdateEntityMessage*>(
               &_UpdateEntityMessage_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(UpdateEntityMessage& a, UpdateEntityMessage& b) {
    a.Swap(&b);
  }
  inline void Swap(UpdateEntityMessage* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(UpdateEntityMessage* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline UpdateEntityMessage* New() const final {
    return CreateMaybeMessage<UpdateEntityMessage>(nullptr);
  }

  UpdateEntityMessage* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<UpdateEntityMessage>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const UpdateEntityMessage& from);
  void MergeFrom(const UpdateEntityMessage& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(UpdateEntityMessage* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "ProtoMessaging.UpdateEntityMessage";
  }
  protected:
  explicit UpdateEntityMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_Tanks_2eproto);
    return ::descriptor_table_Tanks_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPositionCompsFieldNumber = 3,
    kMapObjectCompsFieldNumber = 4,
    kScoreCompsFieldNumber = 5,
    kClientNameCompsFieldNumber = 6,
    kHealthCompsFieldNumber = 7,
    kIdFieldNumber = 1,
    kTimestampFieldNumber = 2,
  };
  // repeated .ProtoMessaging.PositionComponent positionComps = 3;
  int positioncomps_size() const;
  private:
  int _internal_positioncomps_size() const;
  public:
  void clear_positioncomps();
  ::ProtoMessaging::PositionComponent* mutable_positioncomps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::PositionComponent >*
      mutable_positioncomps();
  private:
  const ::ProtoMessaging::PositionComponent& _internal_positioncomps(int index) const;
  ::ProtoMessaging::PositionComponent* _internal_add_positioncomps();
  public:
  const ::ProtoMessaging::PositionComponent& positioncomps(int index) const;
  ::ProtoMessaging::PositionComponent* add_positioncomps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::PositionComponent >&
      positioncomps() const;

  // repeated .ProtoMessaging.MapObjectComponent mapObjectComps = 4;
  int mapobjectcomps_size() const;
  private:
  int _internal_mapobjectcomps_size() const;
  public:
  void clear_mapobjectcomps();
  ::ProtoMessaging::MapObjectComponent* mutable_mapobjectcomps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::MapObjectComponent >*
      mutable_mapobjectcomps();
  private:
  const ::ProtoMessaging::MapObjectComponent& _internal_mapobjectcomps(int index) const;
  ::ProtoMessaging::MapObjectComponent* _internal_add_mapobjectcomps();
  public:
  const ::ProtoMessaging::MapObjectComponent& mapobjectcomps(int index) const;
  ::ProtoMessaging::MapObjectComponent* add_mapobjectcomps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::MapObjectComponent >&
      mapobjectcomps() const;

  // repeated .ProtoMessaging.ScoreComponent scoreComps = 5;
  int scorecomps_size() const;
  private:
  int _internal_scorecomps_size() const;
  public:
  void clear_scorecomps();
  ::ProtoMessaging::ScoreComponent* mutable_scorecomps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ScoreComponent >*
      mutable_scorecomps();
  private:
  const ::ProtoMessaging::ScoreComponent& _internal_scorecomps(int index) const;
  ::ProtoMessaging::ScoreComponent* _internal_add_scorecomps();
  public:
  const ::ProtoMessaging::ScoreComponent& scorecomps(int index) const;
  ::ProtoMessaging::ScoreComponent* add_scorecomps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ScoreComponent >&
      scorecomps() const;

  // repeated .ProtoMessaging.ClientNameComponent clientNameComps = 6;
  int clientnamecomps_size() const;
  private:
  int _internal_clientnamecomps_size() const;
  public:
  void clear_clientnamecomps();
  ::ProtoMessaging::ClientNameComponent* mutable_clientnamecomps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ClientNameComponent >*
      mutable_clientnamecomps();
  private:
  const ::ProtoMessaging::ClientNameComponent& _internal_clientnamecomps(int index) const;
  ::ProtoMessaging::ClientNameComponent* _internal_add_clientnamecomps();
  public:
  const ::ProtoMessaging::ClientNameComponent& clientnamecomps(int index) const;
  ::ProtoMessaging::ClientNameComponent* add_clientnamecomps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ClientNameComponent >&
      clientnamecomps() const;

  // repeated .ProtoMessaging.HealthComponent healthComps = 7;
  int healthcomps_size() const;
  private:
  int _internal_healthcomps_size() const;
  public:
  void clear_healthcomps();
  ::ProtoMessaging::HealthComponent* mutable_healthcomps(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::HealthComponent >*
      mutable_healthcomps();
  private:
  const ::ProtoMessaging::HealthComponent& _internal_healthcomps(int index) const;
  ::ProtoMessaging::HealthComponent* _internal_add_healthcomps();
  public:
  const ::ProtoMessaging::HealthComponent& healthcomps(int index) const;
  ::ProtoMessaging::HealthComponent* add_healthcomps();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::HealthComponent >&
      healthcomps() const;

  // bytes id = 1;
  void clear_id();
  const std::string& id() const;
  void set_id(const std::string& value);
  void set_id(std::string&& value);
  void set_id(const char* value);
  void set_id(const void* value, size_t size);
  std::string* mutable_id();
  std::string* release_id();
  void set_allocated_id(std::string* id);
  private:
  const std::string& _internal_id() const;
  void _internal_set_id(const std::string& value);
  std::string* _internal_mutable_id();
  public:

  // int64 timestamp = 2;
  void clear_timestamp();
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp() const;
  void set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int64 _internal_timestamp() const;
  void _internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value);
  public:

  // @@protoc_insertion_point(class_scope:ProtoMessaging.UpdateEntityMessage)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::PositionComponent > positioncomps_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::MapObjectComponent > mapobjectcomps_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ScoreComponent > scorecomps_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ClientNameComponent > clientnamecomps_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::HealthComponent > healthcomps_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr id_;
  ::PROTOBUF_NAMESPACE_ID::int64 timestamp_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_Tanks_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ControlComponent

// bool up = 1;
inline void ControlComponent::clear_up() {
  up_ = false;
}
inline bool ControlComponent::_internal_up() const {
  return up_;
}
inline bool ControlComponent::up() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlComponent.up)
  return _internal_up();
}
inline void ControlComponent::_internal_set_up(bool value) {
  
  up_ = value;
}
inline void ControlComponent::set_up(bool value) {
  _internal_set_up(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ControlComponent.up)
}

// bool down = 2;
inline void ControlComponent::clear_down() {
  down_ = false;
}
inline bool ControlComponent::_internal_down() const {
  return down_;
}
inline bool ControlComponent::down() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlComponent.down)
  return _internal_down();
}
inline void ControlComponent::_internal_set_down(bool value) {
  
  down_ = value;
}
inline void ControlComponent::set_down(bool value) {
  _internal_set_down(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ControlComponent.down)
}

// bool left = 3;
inline void ControlComponent::clear_left() {
  left_ = false;
}
inline bool ControlComponent::_internal_left() const {
  return left_;
}
inline bool ControlComponent::left() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlComponent.left)
  return _internal_left();
}
inline void ControlComponent::_internal_set_left(bool value) {
  
  left_ = value;
}
inline void ControlComponent::set_left(bool value) {
  _internal_set_left(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ControlComponent.left)
}

// bool right = 4;
inline void ControlComponent::clear_right() {
  right_ = false;
}
inline bool ControlComponent::_internal_right() const {
  return right_;
}
inline bool ControlComponent::right() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlComponent.right)
  return _internal_right();
}
inline void ControlComponent::_internal_set_right(bool value) {
  
  right_ = value;
}
inline void ControlComponent::set_right(bool value) {
  _internal_set_right(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ControlComponent.right)
}

// int32 netid = 5;
inline void ControlComponent::clear_netid() {
  netid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ControlComponent::_internal_netid() const {
  return netid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ControlComponent::netid() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlComponent.netid)
  return _internal_netid();
}
inline void ControlComponent::_internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  netid_ = value;
}
inline void ControlComponent::set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_netid(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ControlComponent.netid)
}

// -------------------------------------------------------------------

// PositionComponent

// int32 prevx = 1;
inline void PositionComponent::clear_prevx() {
  prevx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::_internal_prevx() const {
  return prevx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::prevx() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.PositionComponent.prevx)
  return _internal_prevx();
}
inline void PositionComponent::_internal_set_prevx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  prevx_ = value;
}
inline void PositionComponent::set_prevx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_prevx(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.PositionComponent.prevx)
}

// int32 prevy = 2;
inline void PositionComponent::clear_prevy() {
  prevy_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::_internal_prevy() const {
  return prevy_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::prevy() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.PositionComponent.prevy)
  return _internal_prevy();
}
inline void PositionComponent::_internal_set_prevy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  prevy_ = value;
}
inline void PositionComponent::set_prevy(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_prevy(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.PositionComponent.prevy)
}

// int32 curx = 3;
inline void PositionComponent::clear_curx() {
  curx_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::_internal_curx() const {
  return curx_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::curx() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.PositionComponent.curx)
  return _internal_curx();
}
inline void PositionComponent::_internal_set_curx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  curx_ = value;
}
inline void PositionComponent::set_curx(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_curx(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.PositionComponent.curx)
}

// int32 cury = 4;
inline void PositionComponent::clear_cury() {
  cury_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::_internal_cury() const {
  return cury_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::cury() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.PositionComponent.cury)
  return _internal_cury();
}
inline void PositionComponent::_internal_set_cury(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  cury_ = value;
}
inline void PositionComponent::set_cury(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_cury(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.PositionComponent.cury)
}

// int32 netid = 5;
inline void PositionComponent::clear_netid() {
  netid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::_internal_netid() const {
  return netid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PositionComponent::netid() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.PositionComponent.netid)
  return _internal_netid();
}
inline void PositionComponent::_internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  netid_ = value;
}
inline void PositionComponent::set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_netid(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.PositionComponent.netid)
}

// -------------------------------------------------------------------

// MapObjectComponent

// bytes mapChar = 1;
inline void MapObjectComponent::clear_mapchar() {
  mapchar_.ClearToEmpty();
}
inline const std::string& MapObjectComponent::mapchar() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.MapObjectComponent.mapChar)
  return _internal_mapchar();
}
inline void MapObjectComponent::set_mapchar(const std::string& value) {
  _internal_set_mapchar(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.MapObjectComponent.mapChar)
}
inline std::string* MapObjectComponent::mutable_mapchar() {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.MapObjectComponent.mapChar)
  return _internal_mutable_mapchar();
}
inline const std::string& MapObjectComponent::_internal_mapchar() const {
  return mapchar_.Get();
}
inline void MapObjectComponent::_internal_set_mapchar(const std::string& value) {
  
  mapchar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void MapObjectComponent::set_mapchar(std::string&& value) {
  
  mapchar_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessaging.MapObjectComponent.mapChar)
}
inline void MapObjectComponent::set_mapchar(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  mapchar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoMessaging.MapObjectComponent.mapChar)
}
inline void MapObjectComponent::set_mapchar(const void* value,
    size_t size) {
  
  mapchar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoMessaging.MapObjectComponent.mapChar)
}
inline std::string* MapObjectComponent::_internal_mutable_mapchar() {
  
  return mapchar_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* MapObjectComponent::release_mapchar() {
  // @@protoc_insertion_point(field_release:ProtoMessaging.MapObjectComponent.mapChar)
  return mapchar_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void MapObjectComponent::set_allocated_mapchar(std::string* mapchar) {
  if (mapchar != nullptr) {
    
  } else {
    
  }
  mapchar_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), mapchar,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoMessaging.MapObjectComponent.mapChar)
}

// int32 netid = 2;
inline void MapObjectComponent::clear_netid() {
  netid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MapObjectComponent::_internal_netid() const {
  return netid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 MapObjectComponent::netid() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.MapObjectComponent.netid)
  return _internal_netid();
}
inline void MapObjectComponent::_internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  netid_ = value;
}
inline void MapObjectComponent::set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_netid(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.MapObjectComponent.netid)
}

// -------------------------------------------------------------------

// ScoreComponent

// int32 points = 1;
inline void ScoreComponent::clear_points() {
  points_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ScoreComponent::_internal_points() const {
  return points_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ScoreComponent::points() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ScoreComponent.points)
  return _internal_points();
}
inline void ScoreComponent::_internal_set_points(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  points_ = value;
}
inline void ScoreComponent::set_points(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_points(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ScoreComponent.points)
}

// int32 netid = 2;
inline void ScoreComponent::clear_netid() {
  netid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ScoreComponent::_internal_netid() const {
  return netid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ScoreComponent::netid() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ScoreComponent.netid)
  return _internal_netid();
}
inline void ScoreComponent::_internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  netid_ = value;
}
inline void ScoreComponent::set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_netid(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ScoreComponent.netid)
}

// -------------------------------------------------------------------

// ClientNameComponent

// string name = 1;
inline void ClientNameComponent::clear_name() {
  name_.ClearToEmpty();
}
inline const std::string& ClientNameComponent::name() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ClientNameComponent.name)
  return _internal_name();
}
inline void ClientNameComponent::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ClientNameComponent.name)
}
inline std::string* ClientNameComponent::mutable_name() {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.ClientNameComponent.name)
  return _internal_mutable_name();
}
inline const std::string& ClientNameComponent::_internal_name() const {
  return name_.Get();
}
inline void ClientNameComponent::_internal_set_name(const std::string& value) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ClientNameComponent::set_name(std::string&& value) {
  
  name_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessaging.ClientNameComponent.name)
}
inline void ClientNameComponent::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoMessaging.ClientNameComponent.name)
}
inline void ClientNameComponent::set_name(const char* value,
    size_t size) {
  
  name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoMessaging.ClientNameComponent.name)
}
inline std::string* ClientNameComponent::_internal_mutable_name() {
  
  return name_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ClientNameComponent::release_name() {
  // @@protoc_insertion_point(field_release:ProtoMessaging.ClientNameComponent.name)
  return name_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ClientNameComponent::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    
  } else {
    
  }
  name_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoMessaging.ClientNameComponent.name)
}

// int32 netid = 2;
inline void ClientNameComponent::clear_netid() {
  netid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientNameComponent::_internal_netid() const {
  return netid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 ClientNameComponent::netid() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ClientNameComponent.netid)
  return _internal_netid();
}
inline void ClientNameComponent::_internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  netid_ = value;
}
inline void ClientNameComponent::set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_netid(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ClientNameComponent.netid)
}

// -------------------------------------------------------------------

// HealthComponent

// int32 hp = 1;
inline void HealthComponent::clear_hp() {
  hp_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HealthComponent::_internal_hp() const {
  return hp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HealthComponent::hp() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.HealthComponent.hp)
  return _internal_hp();
}
inline void HealthComponent::_internal_set_hp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  hp_ = value;
}
inline void HealthComponent::set_hp(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_hp(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.HealthComponent.hp)
}

// int32 netid = 2;
inline void HealthComponent::clear_netid() {
  netid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HealthComponent::_internal_netid() const {
  return netid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 HealthComponent::netid() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.HealthComponent.netid)
  return _internal_netid();
}
inline void HealthComponent::_internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  netid_ = value;
}
inline void HealthComponent::set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_netid(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.HealthComponent.netid)
}

// -------------------------------------------------------------------

// ControlMessage

// bytes id = 1;
inline void ControlMessage::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& ControlMessage::id() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlMessage.id)
  return _internal_id();
}
inline void ControlMessage::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ControlMessage.id)
}
inline std::string* ControlMessage::mutable_id() {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.ControlMessage.id)
  return _internal_mutable_id();
}
inline const std::string& ControlMessage::_internal_id() const {
  return id_.Get();
}
inline void ControlMessage::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void ControlMessage::set_id(std::string&& value) {
  
  id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessaging.ControlMessage.id)
}
inline void ControlMessage::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoMessaging.ControlMessage.id)
}
inline void ControlMessage::set_id(const void* value,
    size_t size) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoMessaging.ControlMessage.id)
}
inline std::string* ControlMessage::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* ControlMessage::release_id() {
  // @@protoc_insertion_point(field_release:ProtoMessaging.ControlMessage.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void ControlMessage::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoMessaging.ControlMessage.id)
}

// int64 timestamp = 2;
inline void ControlMessage::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ControlMessage::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 ControlMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlMessage.timestamp)
  return _internal_timestamp();
}
inline void ControlMessage::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  timestamp_ = value;
}
inline void ControlMessage::set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.ControlMessage.timestamp)
}

// .ProtoMessaging.ControlComponent control = 3;
inline bool ControlMessage::_internal_has_control() const {
  return this != internal_default_instance() && control_ != nullptr;
}
inline bool ControlMessage::has_control() const {
  return _internal_has_control();
}
inline void ControlMessage::clear_control() {
  if (GetArena() == nullptr && control_ != nullptr) {
    delete control_;
  }
  control_ = nullptr;
}
inline const ::ProtoMessaging::ControlComponent& ControlMessage::_internal_control() const {
  const ::ProtoMessaging::ControlComponent* p = control_;
  return p != nullptr ? *p : reinterpret_cast<const ::ProtoMessaging::ControlComponent&>(
      ::ProtoMessaging::_ControlComponent_default_instance_);
}
inline const ::ProtoMessaging::ControlComponent& ControlMessage::control() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.ControlMessage.control)
  return _internal_control();
}
inline void ControlMessage::unsafe_arena_set_allocated_control(
    ::ProtoMessaging::ControlComponent* control) {
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::PROTOBUF_NAMESPACE_ID::MessageLite*>(control_);
  }
  control_ = control;
  if (control) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:ProtoMessaging.ControlMessage.control)
}
inline ::ProtoMessaging::ControlComponent* ControlMessage::release_control() {
  
  ::ProtoMessaging::ControlComponent* temp = control_;
  control_ = nullptr;
  if (GetArena() != nullptr) {
    temp = ::PROTOBUF_NAMESPACE_ID::internal::DuplicateIfNonNull(temp);
  }
  return temp;
}
inline ::ProtoMessaging::ControlComponent* ControlMessage::unsafe_arena_release_control() {
  // @@protoc_insertion_point(field_release:ProtoMessaging.ControlMessage.control)
  
  ::ProtoMessaging::ControlComponent* temp = control_;
  control_ = nullptr;
  return temp;
}
inline ::ProtoMessaging::ControlComponent* ControlMessage::_internal_mutable_control() {
  
  if (control_ == nullptr) {
    auto* p = CreateMaybeMessage<::ProtoMessaging::ControlComponent>(GetArena());
    control_ = p;
  }
  return control_;
}
inline ::ProtoMessaging::ControlComponent* ControlMessage::mutable_control() {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.ControlMessage.control)
  return _internal_mutable_control();
}
inline void ControlMessage::set_allocated_control(::ProtoMessaging::ControlComponent* control) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  if (message_arena == nullptr) {
    delete control_;
  }
  if (control) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(control);
    if (message_arena != submessage_arena) {
      control = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, control, submessage_arena);
    }
    
  } else {
    
  }
  control_ = control;
  // @@protoc_insertion_point(field_set_allocated:ProtoMessaging.ControlMessage.control)
}

// -------------------------------------------------------------------

// AddRemoveEntityMessage

// bytes id = 1;
inline void AddRemoveEntityMessage::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& AddRemoveEntityMessage::id() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.AddRemoveEntityMessage.id)
  return _internal_id();
}
inline void AddRemoveEntityMessage::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.AddRemoveEntityMessage.id)
}
inline std::string* AddRemoveEntityMessage::mutable_id() {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.AddRemoveEntityMessage.id)
  return _internal_mutable_id();
}
inline const std::string& AddRemoveEntityMessage::_internal_id() const {
  return id_.Get();
}
inline void AddRemoveEntityMessage::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void AddRemoveEntityMessage::set_id(std::string&& value) {
  
  id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessaging.AddRemoveEntityMessage.id)
}
inline void AddRemoveEntityMessage::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoMessaging.AddRemoveEntityMessage.id)
}
inline void AddRemoveEntityMessage::set_id(const void* value,
    size_t size) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoMessaging.AddRemoveEntityMessage.id)
}
inline std::string* AddRemoveEntityMessage::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* AddRemoveEntityMessage::release_id() {
  // @@protoc_insertion_point(field_release:ProtoMessaging.AddRemoveEntityMessage.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void AddRemoveEntityMessage::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoMessaging.AddRemoveEntityMessage.id)
}

// int64 timestamp = 2;
inline void AddRemoveEntityMessage::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AddRemoveEntityMessage::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 AddRemoveEntityMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.AddRemoveEntityMessage.timestamp)
  return _internal_timestamp();
}
inline void AddRemoveEntityMessage::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  timestamp_ = value;
}
inline void AddRemoveEntityMessage::set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.AddRemoveEntityMessage.timestamp)
}

// int32 netid = 3;
inline void AddRemoveEntityMessage::clear_netid() {
  netid_ = 0;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddRemoveEntityMessage::_internal_netid() const {
  return netid_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 AddRemoveEntityMessage::netid() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.AddRemoveEntityMessage.netid)
  return _internal_netid();
}
inline void AddRemoveEntityMessage::_internal_set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  
  netid_ = value;
}
inline void AddRemoveEntityMessage::set_netid(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_netid(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.AddRemoveEntityMessage.netid)
}

// -------------------------------------------------------------------

// UpdateEntityMessage

// bytes id = 1;
inline void UpdateEntityMessage::clear_id() {
  id_.ClearToEmpty();
}
inline const std::string& UpdateEntityMessage::id() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.UpdateEntityMessage.id)
  return _internal_id();
}
inline void UpdateEntityMessage::set_id(const std::string& value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.UpdateEntityMessage.id)
}
inline std::string* UpdateEntityMessage::mutable_id() {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.UpdateEntityMessage.id)
  return _internal_mutable_id();
}
inline const std::string& UpdateEntityMessage::_internal_id() const {
  return id_.Get();
}
inline void UpdateEntityMessage::_internal_set_id(const std::string& value) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, value, GetArena());
}
inline void UpdateEntityMessage::set_id(std::string&& value) {
  
  id_.Set(
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::move(value), GetArena());
  // @@protoc_insertion_point(field_set_rvalue:ProtoMessaging.UpdateEntityMessage.id)
}
inline void UpdateEntityMessage::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(value), GetArena());
  // @@protoc_insertion_point(field_set_char:ProtoMessaging.UpdateEntityMessage.id)
}
inline void UpdateEntityMessage::set_id(const void* value,
    size_t size) {
  
  id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, ::std::string(
      reinterpret_cast<const char*>(value), size), GetArena());
  // @@protoc_insertion_point(field_set_pointer:ProtoMessaging.UpdateEntityMessage.id)
}
inline std::string* UpdateEntityMessage::_internal_mutable_id() {
  
  return id_.Mutable(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
}
inline std::string* UpdateEntityMessage::release_id() {
  // @@protoc_insertion_point(field_release:ProtoMessaging.UpdateEntityMessage.id)
  return id_.Release(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}
inline void UpdateEntityMessage::set_allocated_id(std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocated(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), id,
      GetArena());
  // @@protoc_insertion_point(field_set_allocated:ProtoMessaging.UpdateEntityMessage.id)
}

// int64 timestamp = 2;
inline void UpdateEntityMessage::clear_timestamp() {
  timestamp_ = PROTOBUF_LONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UpdateEntityMessage::_internal_timestamp() const {
  return timestamp_;
}
inline ::PROTOBUF_NAMESPACE_ID::int64 UpdateEntityMessage::timestamp() const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.UpdateEntityMessage.timestamp)
  return _internal_timestamp();
}
inline void UpdateEntityMessage::_internal_set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  
  timestamp_ = value;
}
inline void UpdateEntityMessage::set_timestamp(::PROTOBUF_NAMESPACE_ID::int64 value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:ProtoMessaging.UpdateEntityMessage.timestamp)
}

// repeated .ProtoMessaging.PositionComponent positionComps = 3;
inline int UpdateEntityMessage::_internal_positioncomps_size() const {
  return positioncomps_.size();
}
inline int UpdateEntityMessage::positioncomps_size() const {
  return _internal_positioncomps_size();
}
inline void UpdateEntityMessage::clear_positioncomps() {
  positioncomps_.Clear();
}
inline ::ProtoMessaging::PositionComponent* UpdateEntityMessage::mutable_positioncomps(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.UpdateEntityMessage.positionComps)
  return positioncomps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::PositionComponent >*
UpdateEntityMessage::mutable_positioncomps() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessaging.UpdateEntityMessage.positionComps)
  return &positioncomps_;
}
inline const ::ProtoMessaging::PositionComponent& UpdateEntityMessage::_internal_positioncomps(int index) const {
  return positioncomps_.Get(index);
}
inline const ::ProtoMessaging::PositionComponent& UpdateEntityMessage::positioncomps(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.UpdateEntityMessage.positionComps)
  return _internal_positioncomps(index);
}
inline ::ProtoMessaging::PositionComponent* UpdateEntityMessage::_internal_add_positioncomps() {
  return positioncomps_.Add();
}
inline ::ProtoMessaging::PositionComponent* UpdateEntityMessage::add_positioncomps() {
  // @@protoc_insertion_point(field_add:ProtoMessaging.UpdateEntityMessage.positionComps)
  return _internal_add_positioncomps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::PositionComponent >&
UpdateEntityMessage::positioncomps() const {
  // @@protoc_insertion_point(field_list:ProtoMessaging.UpdateEntityMessage.positionComps)
  return positioncomps_;
}

// repeated .ProtoMessaging.MapObjectComponent mapObjectComps = 4;
inline int UpdateEntityMessage::_internal_mapobjectcomps_size() const {
  return mapobjectcomps_.size();
}
inline int UpdateEntityMessage::mapobjectcomps_size() const {
  return _internal_mapobjectcomps_size();
}
inline void UpdateEntityMessage::clear_mapobjectcomps() {
  mapobjectcomps_.Clear();
}
inline ::ProtoMessaging::MapObjectComponent* UpdateEntityMessage::mutable_mapobjectcomps(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.UpdateEntityMessage.mapObjectComps)
  return mapobjectcomps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::MapObjectComponent >*
UpdateEntityMessage::mutable_mapobjectcomps() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessaging.UpdateEntityMessage.mapObjectComps)
  return &mapobjectcomps_;
}
inline const ::ProtoMessaging::MapObjectComponent& UpdateEntityMessage::_internal_mapobjectcomps(int index) const {
  return mapobjectcomps_.Get(index);
}
inline const ::ProtoMessaging::MapObjectComponent& UpdateEntityMessage::mapobjectcomps(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.UpdateEntityMessage.mapObjectComps)
  return _internal_mapobjectcomps(index);
}
inline ::ProtoMessaging::MapObjectComponent* UpdateEntityMessage::_internal_add_mapobjectcomps() {
  return mapobjectcomps_.Add();
}
inline ::ProtoMessaging::MapObjectComponent* UpdateEntityMessage::add_mapobjectcomps() {
  // @@protoc_insertion_point(field_add:ProtoMessaging.UpdateEntityMessage.mapObjectComps)
  return _internal_add_mapobjectcomps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::MapObjectComponent >&
UpdateEntityMessage::mapobjectcomps() const {
  // @@protoc_insertion_point(field_list:ProtoMessaging.UpdateEntityMessage.mapObjectComps)
  return mapobjectcomps_;
}

// repeated .ProtoMessaging.ScoreComponent scoreComps = 5;
inline int UpdateEntityMessage::_internal_scorecomps_size() const {
  return scorecomps_.size();
}
inline int UpdateEntityMessage::scorecomps_size() const {
  return _internal_scorecomps_size();
}
inline void UpdateEntityMessage::clear_scorecomps() {
  scorecomps_.Clear();
}
inline ::ProtoMessaging::ScoreComponent* UpdateEntityMessage::mutable_scorecomps(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.UpdateEntityMessage.scoreComps)
  return scorecomps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ScoreComponent >*
UpdateEntityMessage::mutable_scorecomps() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessaging.UpdateEntityMessage.scoreComps)
  return &scorecomps_;
}
inline const ::ProtoMessaging::ScoreComponent& UpdateEntityMessage::_internal_scorecomps(int index) const {
  return scorecomps_.Get(index);
}
inline const ::ProtoMessaging::ScoreComponent& UpdateEntityMessage::scorecomps(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.UpdateEntityMessage.scoreComps)
  return _internal_scorecomps(index);
}
inline ::ProtoMessaging::ScoreComponent* UpdateEntityMessage::_internal_add_scorecomps() {
  return scorecomps_.Add();
}
inline ::ProtoMessaging::ScoreComponent* UpdateEntityMessage::add_scorecomps() {
  // @@protoc_insertion_point(field_add:ProtoMessaging.UpdateEntityMessage.scoreComps)
  return _internal_add_scorecomps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ScoreComponent >&
UpdateEntityMessage::scorecomps() const {
  // @@protoc_insertion_point(field_list:ProtoMessaging.UpdateEntityMessage.scoreComps)
  return scorecomps_;
}

// repeated .ProtoMessaging.ClientNameComponent clientNameComps = 6;
inline int UpdateEntityMessage::_internal_clientnamecomps_size() const {
  return clientnamecomps_.size();
}
inline int UpdateEntityMessage::clientnamecomps_size() const {
  return _internal_clientnamecomps_size();
}
inline void UpdateEntityMessage::clear_clientnamecomps() {
  clientnamecomps_.Clear();
}
inline ::ProtoMessaging::ClientNameComponent* UpdateEntityMessage::mutable_clientnamecomps(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.UpdateEntityMessage.clientNameComps)
  return clientnamecomps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ClientNameComponent >*
UpdateEntityMessage::mutable_clientnamecomps() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessaging.UpdateEntityMessage.clientNameComps)
  return &clientnamecomps_;
}
inline const ::ProtoMessaging::ClientNameComponent& UpdateEntityMessage::_internal_clientnamecomps(int index) const {
  return clientnamecomps_.Get(index);
}
inline const ::ProtoMessaging::ClientNameComponent& UpdateEntityMessage::clientnamecomps(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.UpdateEntityMessage.clientNameComps)
  return _internal_clientnamecomps(index);
}
inline ::ProtoMessaging::ClientNameComponent* UpdateEntityMessage::_internal_add_clientnamecomps() {
  return clientnamecomps_.Add();
}
inline ::ProtoMessaging::ClientNameComponent* UpdateEntityMessage::add_clientnamecomps() {
  // @@protoc_insertion_point(field_add:ProtoMessaging.UpdateEntityMessage.clientNameComps)
  return _internal_add_clientnamecomps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::ClientNameComponent >&
UpdateEntityMessage::clientnamecomps() const {
  // @@protoc_insertion_point(field_list:ProtoMessaging.UpdateEntityMessage.clientNameComps)
  return clientnamecomps_;
}

// repeated .ProtoMessaging.HealthComponent healthComps = 7;
inline int UpdateEntityMessage::_internal_healthcomps_size() const {
  return healthcomps_.size();
}
inline int UpdateEntityMessage::healthcomps_size() const {
  return _internal_healthcomps_size();
}
inline void UpdateEntityMessage::clear_healthcomps() {
  healthcomps_.Clear();
}
inline ::ProtoMessaging::HealthComponent* UpdateEntityMessage::mutable_healthcomps(int index) {
  // @@protoc_insertion_point(field_mutable:ProtoMessaging.UpdateEntityMessage.healthComps)
  return healthcomps_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::HealthComponent >*
UpdateEntityMessage::mutable_healthcomps() {
  // @@protoc_insertion_point(field_mutable_list:ProtoMessaging.UpdateEntityMessage.healthComps)
  return &healthcomps_;
}
inline const ::ProtoMessaging::HealthComponent& UpdateEntityMessage::_internal_healthcomps(int index) const {
  return healthcomps_.Get(index);
}
inline const ::ProtoMessaging::HealthComponent& UpdateEntityMessage::healthcomps(int index) const {
  // @@protoc_insertion_point(field_get:ProtoMessaging.UpdateEntityMessage.healthComps)
  return _internal_healthcomps(index);
}
inline ::ProtoMessaging::HealthComponent* UpdateEntityMessage::_internal_add_healthcomps() {
  return healthcomps_.Add();
}
inline ::ProtoMessaging::HealthComponent* UpdateEntityMessage::add_healthcomps() {
  // @@protoc_insertion_point(field_add:ProtoMessaging.UpdateEntityMessage.healthComps)
  return _internal_add_healthcomps();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::ProtoMessaging::HealthComponent >&
UpdateEntityMessage::healthcomps() const {
  // @@protoc_insertion_point(field_list:ProtoMessaging.UpdateEntityMessage.healthComps)
  return healthcomps_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoMessaging

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_Tanks_2eproto
