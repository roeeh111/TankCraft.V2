// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Tanks.proto

#include "Tanks.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_Tanks_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientNameComponent_Tanks_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Tanks_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ControlComponent_Tanks_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Tanks_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthComponent_Tanks_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Tanks_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MapObjectComponent_Tanks_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Tanks_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PositionComponent_Tanks_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_Tanks_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreComponent_Tanks_2eproto;
namespace ProtoMessaging {
class ControlComponentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ControlComponent> _instance;
} _ControlComponent_default_instance_;
class PositionComponentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PositionComponent> _instance;
} _PositionComponent_default_instance_;
class MapObjectComponentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MapObjectComponent> _instance;
} _MapObjectComponent_default_instance_;
class ScoreComponentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ScoreComponent> _instance;
} _ScoreComponent_default_instance_;
class ClientNameComponentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClientNameComponent> _instance;
} _ClientNameComponent_default_instance_;
class HealthComponentDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HealthComponent> _instance;
} _HealthComponent_default_instance_;
class ControlMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ControlMessage> _instance;
} _ControlMessage_default_instance_;
class AddRemoveEntityMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AddRemoveEntityMessage> _instance;
} _AddRemoveEntityMessage_default_instance_;
class UpdateEntityMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<UpdateEntityMessage> _instance;
} _UpdateEntityMessage_default_instance_;
}  // namespace ProtoMessaging
static void InitDefaultsscc_info_AddRemoveEntityMessage_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_AddRemoveEntityMessage_default_instance_;
    new (ptr) ::ProtoMessaging::AddRemoveEntityMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AddRemoveEntityMessage_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AddRemoveEntityMessage_Tanks_2eproto}, {}};

static void InitDefaultsscc_info_ClientNameComponent_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_ClientNameComponent_default_instance_;
    new (ptr) ::ProtoMessaging::ClientNameComponent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClientNameComponent_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClientNameComponent_Tanks_2eproto}, {}};

static void InitDefaultsscc_info_ControlComponent_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_ControlComponent_default_instance_;
    new (ptr) ::ProtoMessaging::ControlComponent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ControlComponent_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ControlComponent_Tanks_2eproto}, {}};

static void InitDefaultsscc_info_ControlMessage_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_ControlMessage_default_instance_;
    new (ptr) ::ProtoMessaging::ControlMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_ControlMessage_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_ControlMessage_Tanks_2eproto}, {
      &scc_info_ControlComponent_Tanks_2eproto.base,}};

static void InitDefaultsscc_info_HealthComponent_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_HealthComponent_default_instance_;
    new (ptr) ::ProtoMessaging::HealthComponent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HealthComponent_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HealthComponent_Tanks_2eproto}, {}};

static void InitDefaultsscc_info_MapObjectComponent_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_MapObjectComponent_default_instance_;
    new (ptr) ::ProtoMessaging::MapObjectComponent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MapObjectComponent_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MapObjectComponent_Tanks_2eproto}, {}};

static void InitDefaultsscc_info_PositionComponent_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_PositionComponent_default_instance_;
    new (ptr) ::ProtoMessaging::PositionComponent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PositionComponent_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PositionComponent_Tanks_2eproto}, {}};

static void InitDefaultsscc_info_ScoreComponent_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_ScoreComponent_default_instance_;
    new (ptr) ::ProtoMessaging::ScoreComponent();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ScoreComponent_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ScoreComponent_Tanks_2eproto}, {}};

static void InitDefaultsscc_info_UpdateEntityMessage_Tanks_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ProtoMessaging::_UpdateEntityMessage_default_instance_;
    new (ptr) ::ProtoMessaging::UpdateEntityMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<5> scc_info_UpdateEntityMessage_Tanks_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 5, 0, InitDefaultsscc_info_UpdateEntityMessage_Tanks_2eproto}, {
      &scc_info_PositionComponent_Tanks_2eproto.base,
      &scc_info_MapObjectComponent_Tanks_2eproto.base,
      &scc_info_ScoreComponent_Tanks_2eproto.base,
      &scc_info_ClientNameComponent_Tanks_2eproto.base,
      &scc_info_HealthComponent_Tanks_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_Tanks_2eproto[9];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_Tanks_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_Tanks_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_Tanks_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlComponent, up_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlComponent, down_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlComponent, left_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlComponent, right_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlComponent, netid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::PositionComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::PositionComponent, prevx_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::PositionComponent, prevy_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::PositionComponent, curx_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::PositionComponent, cury_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::PositionComponent, netid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::MapObjectComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::MapObjectComponent, mapchar_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::MapObjectComponent, netid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ScoreComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ScoreComponent, points_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ScoreComponent, netid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ClientNameComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ClientNameComponent, name_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ClientNameComponent, netid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::HealthComponent, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::HealthComponent, hp_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::HealthComponent, netid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlMessage, id_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::ControlMessage, control_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::AddRemoveEntityMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::AddRemoveEntityMessage, id_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::AddRemoveEntityMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::AddRemoveEntityMessage, netid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, id_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, positioncomps_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, mapobjectcomps_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, scorecomps_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, clientnamecomps_),
  PROTOBUF_FIELD_OFFSET(::ProtoMessaging::UpdateEntityMessage, healthcomps_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ProtoMessaging::ControlComponent)},
  { 10, -1, sizeof(::ProtoMessaging::PositionComponent)},
  { 20, -1, sizeof(::ProtoMessaging::MapObjectComponent)},
  { 27, -1, sizeof(::ProtoMessaging::ScoreComponent)},
  { 34, -1, sizeof(::ProtoMessaging::ClientNameComponent)},
  { 41, -1, sizeof(::ProtoMessaging::HealthComponent)},
  { 48, -1, sizeof(::ProtoMessaging::ControlMessage)},
  { 56, -1, sizeof(::ProtoMessaging::AddRemoveEntityMessage)},
  { 64, -1, sizeof(::ProtoMessaging::UpdateEntityMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_ControlComponent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_PositionComponent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_MapObjectComponent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_ScoreComponent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_ClientNameComponent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_HealthComponent_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_ControlMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_AddRemoveEntityMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ProtoMessaging::_UpdateEntityMessage_default_instance_),
};

const char descriptor_table_protodef_Tanks_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\013Tanks.proto\022\016ProtoMessaging\"X\n\020Control"
  "Component\022\n\n\002up\030\001 \001(\010\022\014\n\004down\030\002 \001(\010\022\014\n\004l"
  "eft\030\003 \001(\010\022\r\n\005right\030\004 \001(\010\022\r\n\005netid\030\005 \001(\005\""
  "\\\n\021PositionComponent\022\r\n\005prevx\030\001 \001(\005\022\r\n\005p"
  "revy\030\002 \001(\005\022\014\n\004curx\030\003 \001(\005\022\014\n\004cury\030\004 \001(\005\022\r"
  "\n\005netid\030\005 \001(\005\"4\n\022MapObjectComponent\022\017\n\007m"
  "apChar\030\001 \001(\014\022\r\n\005netid\030\002 \001(\005\"/\n\016ScoreComp"
  "onent\022\016\n\006points\030\001 \001(\005\022\r\n\005netid\030\002 \001(\005\"2\n\023"
  "ClientNameComponent\022\014\n\004name\030\001 \001(\t\022\r\n\005net"
  "id\030\002 \001(\005\",\n\017HealthComponent\022\n\n\002hp\030\001 \001(\005\022"
  "\r\n\005netid\030\002 \001(\005\"b\n\016ControlMessage\022\n\n\002id\030\001"
  " \001(\014\022\021\n\ttimestamp\030\002 \001(\003\0221\n\007control\030\003 \001(\013"
  "2 .ProtoMessaging.ControlComponent\"F\n\026Ad"
  "dRemoveEntityMessage\022\n\n\002id\030\001 \001(\014\022\021\n\ttime"
  "stamp\030\002 \001(\003\022\r\n\005netid\030\003 \001(\005\"\322\002\n\023UpdateEnt"
  "ityMessage\022\n\n\002id\030\001 \001(\014\022\021\n\ttimestamp\030\002 \001("
  "\003\0228\n\rpositionComps\030\003 \003(\0132!.ProtoMessagin"
  "g.PositionComponent\022:\n\016mapObjectComps\030\004 "
  "\003(\0132\".ProtoMessaging.MapObjectComponent\022"
  "2\n\nscoreComps\030\005 \003(\0132\036.ProtoMessaging.Sco"
  "reComponent\022<\n\017clientNameComps\030\006 \003(\0132#.P"
  "rotoMessaging.ClientNameComponent\0224\n\013hea"
  "lthComps\030\007 \003(\0132\037.ProtoMessaging.HealthCo"
  "mponentb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_Tanks_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_Tanks_2eproto_sccs[9] = {
  &scc_info_AddRemoveEntityMessage_Tanks_2eproto.base,
  &scc_info_ClientNameComponent_Tanks_2eproto.base,
  &scc_info_ControlComponent_Tanks_2eproto.base,
  &scc_info_ControlMessage_Tanks_2eproto.base,
  &scc_info_HealthComponent_Tanks_2eproto.base,
  &scc_info_MapObjectComponent_Tanks_2eproto.base,
  &scc_info_PositionComponent_Tanks_2eproto.base,
  &scc_info_ScoreComponent_Tanks_2eproto.base,
  &scc_info_UpdateEntityMessage_Tanks_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_Tanks_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_Tanks_2eproto = {
  false, false, descriptor_table_protodef_Tanks_2eproto, "Tanks.proto", 935,
  &descriptor_table_Tanks_2eproto_once, descriptor_table_Tanks_2eproto_sccs, descriptor_table_Tanks_2eproto_deps, 9, 0,
  schemas, file_default_instances, TableStruct_Tanks_2eproto::offsets,
  file_level_metadata_Tanks_2eproto, 9, file_level_enum_descriptors_Tanks_2eproto, file_level_service_descriptors_Tanks_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_Tanks_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_Tanks_2eproto)), true);
namespace ProtoMessaging {

// ===================================================================

class ControlComponent::_Internal {
 public:
};

ControlComponent::ControlComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.ControlComponent)
}
ControlComponent::ControlComponent(const ControlComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&up_, &from.up_,
    static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
    reinterpret_cast<char*>(&up_)) + sizeof(netid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.ControlComponent)
}

void ControlComponent::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&up_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&up_)) + sizeof(netid_));
}

ControlComponent::~ControlComponent() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.ControlComponent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ControlComponent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ControlComponent::ArenaDtor(void* object) {
  ControlComponent* _this = reinterpret_cast< ControlComponent* >(object);
  (void)_this;
}
void ControlComponent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ControlComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlComponent& ControlComponent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ControlComponent_Tanks_2eproto.base);
  return *internal_default_instance();
}


void ControlComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.ControlComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&up_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&up_)) + sizeof(netid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ControlComponent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool up = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          up_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool down = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          down_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool left = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          left_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool right = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          right_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 netid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          netid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ControlComponent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.ControlComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool up = 1;
  if (this->up() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_up(), target);
  }

  // bool down = 2;
  if (this->down() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_down(), target);
  }

  // bool left = 3;
  if (this->left() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_left(), target);
  }

  // bool right = 4;
  if (this->right() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_right(), target);
  }

  // int32 netid = 5;
  if (this->netid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_netid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.ControlComponent)
  return target;
}

size_t ControlComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.ControlComponent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool up = 1;
  if (this->up() != 0) {
    total_size += 1 + 1;
  }

  // bool down = 2;
  if (this->down() != 0) {
    total_size += 1 + 1;
  }

  // bool left = 3;
  if (this->left() != 0) {
    total_size += 1 + 1;
  }

  // bool right = 4;
  if (this->right() != 0) {
    total_size += 1 + 1;
  }

  // int32 netid = 5;
  if (this->netid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_netid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlComponent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.ControlComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlComponent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ControlComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.ControlComponent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.ControlComponent)
    MergeFrom(*source);
  }
}

void ControlComponent::MergeFrom(const ControlComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.ControlComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.up() != 0) {
    _internal_set_up(from._internal_up());
  }
  if (from.down() != 0) {
    _internal_set_down(from._internal_down());
  }
  if (from.left() != 0) {
    _internal_set_left(from._internal_left());
  }
  if (from.right() != 0) {
    _internal_set_right(from._internal_right());
  }
  if (from.netid() != 0) {
    _internal_set_netid(from._internal_netid());
  }
}

void ControlComponent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.ControlComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlComponent::CopyFrom(const ControlComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.ControlComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlComponent::IsInitialized() const {
  return true;
}

void ControlComponent::InternalSwap(ControlComponent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlComponent, netid_)
      + sizeof(ControlComponent::netid_)
      - PROTOBUF_FIELD_OFFSET(ControlComponent, up_)>(
          reinterpret_cast<char*>(&up_),
          reinterpret_cast<char*>(&other->up_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ControlComponent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class PositionComponent::_Internal {
 public:
};

PositionComponent::PositionComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.PositionComponent)
}
PositionComponent::PositionComponent(const PositionComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&prevx_, &from.prevx_,
    static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
    reinterpret_cast<char*>(&prevx_)) + sizeof(netid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.PositionComponent)
}

void PositionComponent::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&prevx_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&prevx_)) + sizeof(netid_));
}

PositionComponent::~PositionComponent() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.PositionComponent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void PositionComponent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void PositionComponent::ArenaDtor(void* object) {
  PositionComponent* _this = reinterpret_cast< PositionComponent* >(object);
  (void)_this;
}
void PositionComponent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void PositionComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PositionComponent& PositionComponent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PositionComponent_Tanks_2eproto.base);
  return *internal_default_instance();
}


void PositionComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.PositionComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&prevx_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&prevx_)) + sizeof(netid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PositionComponent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 prevx = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          prevx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 prevy = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          prevy_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 curx = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          curx_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 cury = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          cury_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 netid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          netid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PositionComponent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.PositionComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 prevx = 1;
  if (this->prevx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_prevx(), target);
  }

  // int32 prevy = 2;
  if (this->prevy() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_prevy(), target);
  }

  // int32 curx = 3;
  if (this->curx() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_curx(), target);
  }

  // int32 cury = 4;
  if (this->cury() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_cury(), target);
  }

  // int32 netid = 5;
  if (this->netid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_netid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.PositionComponent)
  return target;
}

size_t PositionComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.PositionComponent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 prevx = 1;
  if (this->prevx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_prevx());
  }

  // int32 prevy = 2;
  if (this->prevy() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_prevy());
  }

  // int32 curx = 3;
  if (this->curx() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_curx());
  }

  // int32 cury = 4;
  if (this->cury() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_cury());
  }

  // int32 netid = 5;
  if (this->netid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_netid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PositionComponent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.PositionComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const PositionComponent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PositionComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.PositionComponent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.PositionComponent)
    MergeFrom(*source);
  }
}

void PositionComponent::MergeFrom(const PositionComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.PositionComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prevx() != 0) {
    _internal_set_prevx(from._internal_prevx());
  }
  if (from.prevy() != 0) {
    _internal_set_prevy(from._internal_prevy());
  }
  if (from.curx() != 0) {
    _internal_set_curx(from._internal_curx());
  }
  if (from.cury() != 0) {
    _internal_set_cury(from._internal_cury());
  }
  if (from.netid() != 0) {
    _internal_set_netid(from._internal_netid());
  }
}

void PositionComponent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.PositionComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PositionComponent::CopyFrom(const PositionComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.PositionComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PositionComponent::IsInitialized() const {
  return true;
}

void PositionComponent::InternalSwap(PositionComponent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PositionComponent, netid_)
      + sizeof(PositionComponent::netid_)
      - PROTOBUF_FIELD_OFFSET(PositionComponent, prevx_)>(
          reinterpret_cast<char*>(&prevx_),
          reinterpret_cast<char*>(&other->prevx_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PositionComponent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class MapObjectComponent::_Internal {
 public:
};

MapObjectComponent::MapObjectComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.MapObjectComponent)
}
MapObjectComponent::MapObjectComponent(const MapObjectComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  mapchar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mapchar().empty()) {
    mapchar_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_mapchar(), 
      GetArena());
  }
  netid_ = from.netid_;
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.MapObjectComponent)
}

void MapObjectComponent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MapObjectComponent_Tanks_2eproto.base);
  mapchar_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  netid_ = 0;
}

MapObjectComponent::~MapObjectComponent() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.MapObjectComponent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void MapObjectComponent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  mapchar_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MapObjectComponent::ArenaDtor(void* object) {
  MapObjectComponent* _this = reinterpret_cast< MapObjectComponent* >(object);
  (void)_this;
}
void MapObjectComponent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void MapObjectComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MapObjectComponent& MapObjectComponent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MapObjectComponent_Tanks_2eproto.base);
  return *internal_default_instance();
}


void MapObjectComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.MapObjectComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mapchar_.ClearToEmpty();
  netid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MapObjectComponent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes mapChar = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_mapchar();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 netid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          netid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MapObjectComponent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.MapObjectComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes mapChar = 1;
  if (this->mapchar().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_mapchar(), target);
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_netid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.MapObjectComponent)
  return target;
}

size_t MapObjectComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.MapObjectComponent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes mapChar = 1;
  if (this->mapchar().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_mapchar());
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_netid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MapObjectComponent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.MapObjectComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const MapObjectComponent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MapObjectComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.MapObjectComponent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.MapObjectComponent)
    MergeFrom(*source);
  }
}

void MapObjectComponent::MergeFrom(const MapObjectComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.MapObjectComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.mapchar().size() > 0) {
    _internal_set_mapchar(from._internal_mapchar());
  }
  if (from.netid() != 0) {
    _internal_set_netid(from._internal_netid());
  }
}

void MapObjectComponent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.MapObjectComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MapObjectComponent::CopyFrom(const MapObjectComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.MapObjectComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MapObjectComponent::IsInitialized() const {
  return true;
}

void MapObjectComponent::InternalSwap(MapObjectComponent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  mapchar_.Swap(&other->mapchar_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(netid_, other->netid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MapObjectComponent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ScoreComponent::_Internal {
 public:
};

ScoreComponent::ScoreComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.ScoreComponent)
}
ScoreComponent::ScoreComponent(const ScoreComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&points_, &from.points_,
    static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
    reinterpret_cast<char*>(&points_)) + sizeof(netid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.ScoreComponent)
}

void ScoreComponent::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&points_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&points_)) + sizeof(netid_));
}

ScoreComponent::~ScoreComponent() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.ScoreComponent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ScoreComponent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void ScoreComponent::ArenaDtor(void* object) {
  ScoreComponent* _this = reinterpret_cast< ScoreComponent* >(object);
  (void)_this;
}
void ScoreComponent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ScoreComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ScoreComponent& ScoreComponent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ScoreComponent_Tanks_2eproto.base);
  return *internal_default_instance();
}


void ScoreComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.ScoreComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&points_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&points_)) + sizeof(netid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ScoreComponent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 points = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          points_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 netid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          netid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ScoreComponent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.ScoreComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 points = 1;
  if (this->points() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_points(), target);
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_netid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.ScoreComponent)
  return target;
}

size_t ScoreComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.ScoreComponent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 points = 1;
  if (this->points() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_points());
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_netid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ScoreComponent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.ScoreComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const ScoreComponent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ScoreComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.ScoreComponent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.ScoreComponent)
    MergeFrom(*source);
  }
}

void ScoreComponent::MergeFrom(const ScoreComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.ScoreComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.points() != 0) {
    _internal_set_points(from._internal_points());
  }
  if (from.netid() != 0) {
    _internal_set_netid(from._internal_netid());
  }
}

void ScoreComponent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.ScoreComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ScoreComponent::CopyFrom(const ScoreComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.ScoreComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ScoreComponent::IsInitialized() const {
  return true;
}

void ScoreComponent::InternalSwap(ScoreComponent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ScoreComponent, netid_)
      + sizeof(ScoreComponent::netid_)
      - PROTOBUF_FIELD_OFFSET(ScoreComponent, points_)>(
          reinterpret_cast<char*>(&points_),
          reinterpret_cast<char*>(&other->points_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ScoreComponent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ClientNameComponent::_Internal {
 public:
};

ClientNameComponent::ClientNameComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.ClientNameComponent)
}
ClientNameComponent::ClientNameComponent(const ClientNameComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  netid_ = from.netid_;
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.ClientNameComponent)
}

void ClientNameComponent::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClientNameComponent_Tanks_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  netid_ = 0;
}

ClientNameComponent::~ClientNameComponent() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.ClientNameComponent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ClientNameComponent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClientNameComponent::ArenaDtor(void* object) {
  ClientNameComponent* _this = reinterpret_cast< ClientNameComponent* >(object);
  (void)_this;
}
void ClientNameComponent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ClientNameComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClientNameComponent& ClientNameComponent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClientNameComponent_Tanks_2eproto.base);
  return *internal_default_instance();
}


void ClientNameComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.ClientNameComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  netid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ClientNameComponent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "ProtoMessaging.ClientNameComponent.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 netid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          netid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClientNameComponent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.ClientNameComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ProtoMessaging.ClientNameComponent.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_netid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.ClientNameComponent)
  return target;
}

size_t ClientNameComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.ClientNameComponent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_netid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClientNameComponent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.ClientNameComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const ClientNameComponent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClientNameComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.ClientNameComponent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.ClientNameComponent)
    MergeFrom(*source);
  }
}

void ClientNameComponent::MergeFrom(const ClientNameComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.ClientNameComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.netid() != 0) {
    _internal_set_netid(from._internal_netid());
  }
}

void ClientNameComponent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.ClientNameComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClientNameComponent::CopyFrom(const ClientNameComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.ClientNameComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClientNameComponent::IsInitialized() const {
  return true;
}

void ClientNameComponent::InternalSwap(ClientNameComponent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(netid_, other->netid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClientNameComponent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HealthComponent::_Internal {
 public:
};

HealthComponent::HealthComponent(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.HealthComponent)
}
HealthComponent::HealthComponent(const HealthComponent& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&hp_, &from.hp_,
    static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
    reinterpret_cast<char*>(&hp_)) + sizeof(netid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.HealthComponent)
}

void HealthComponent::SharedCtor() {
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&hp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&hp_)) + sizeof(netid_));
}

HealthComponent::~HealthComponent() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.HealthComponent)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HealthComponent::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void HealthComponent::ArenaDtor(void* object) {
  HealthComponent* _this = reinterpret_cast< HealthComponent* >(object);
  (void)_this;
}
void HealthComponent::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HealthComponent::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HealthComponent& HealthComponent::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HealthComponent_Tanks_2eproto.base);
  return *internal_default_instance();
}


void HealthComponent::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.HealthComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&hp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&hp_)) + sizeof(netid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HealthComponent::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 hp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          hp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 netid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          netid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HealthComponent::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.HealthComponent)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 hp = 1;
  if (this->hp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_hp(), target);
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_netid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.HealthComponent)
  return target;
}

size_t HealthComponent::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.HealthComponent)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 hp = 1;
  if (this->hp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_hp());
  }

  // int32 netid = 2;
  if (this->netid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_netid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HealthComponent::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.HealthComponent)
  GOOGLE_DCHECK_NE(&from, this);
  const HealthComponent* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HealthComponent>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.HealthComponent)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.HealthComponent)
    MergeFrom(*source);
  }
}

void HealthComponent::MergeFrom(const HealthComponent& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.HealthComponent)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hp() != 0) {
    _internal_set_hp(from._internal_hp());
  }
  if (from.netid() != 0) {
    _internal_set_netid(from._internal_netid());
  }
}

void HealthComponent::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.HealthComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HealthComponent::CopyFrom(const HealthComponent& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.HealthComponent)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HealthComponent::IsInitialized() const {
  return true;
}

void HealthComponent::InternalSwap(HealthComponent* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(HealthComponent, netid_)
      + sizeof(HealthComponent::netid_)
      - PROTOBUF_FIELD_OFFSET(HealthComponent, hp_)>(
          reinterpret_cast<char*>(&hp_),
          reinterpret_cast<char*>(&other->hp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata HealthComponent::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ControlMessage::_Internal {
 public:
  static const ::ProtoMessaging::ControlComponent& control(const ControlMessage* msg);
};

const ::ProtoMessaging::ControlComponent&
ControlMessage::_Internal::control(const ControlMessage* msg) {
  return *msg->control_;
}
ControlMessage::ControlMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.ControlMessage)
}
ControlMessage::ControlMessage(const ControlMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  if (from._internal_has_control()) {
    control_ = new ::ProtoMessaging::ControlComponent(*from.control_);
  } else {
    control_ = nullptr;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.ControlMessage)
}

void ControlMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ControlMessage_Tanks_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&control_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&control_)) + sizeof(timestamp_));
}

ControlMessage::~ControlMessage() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.ControlMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ControlMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete control_;
}

void ControlMessage::ArenaDtor(void* object) {
  ControlMessage* _this = reinterpret_cast< ControlMessage* >(object);
  (void)_this;
}
void ControlMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ControlMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ControlMessage& ControlMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ControlMessage_Tanks_2eproto.base);
  return *internal_default_instance();
}


void ControlMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.ControlMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  if (GetArena() == nullptr && control_ != nullptr) {
    delete control_;
  }
  control_ = nullptr;
  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ControlMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ProtoMessaging.ControlComponent control = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_control(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ControlMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.ControlMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (this->id().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // .ProtoMessaging.ControlComponent control = 3;
  if (this->has_control()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::control(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.ControlMessage)
  return target;
}

size_t ControlMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.ControlMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // .ProtoMessaging.ControlComponent control = 3;
  if (this->has_control()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *control_);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ControlMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.ControlMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const ControlMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ControlMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.ControlMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.ControlMessage)
    MergeFrom(*source);
  }
}

void ControlMessage::MergeFrom(const ControlMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.ControlMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.has_control()) {
    _internal_mutable_control()->::ProtoMessaging::ControlComponent::MergeFrom(from._internal_control());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void ControlMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.ControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ControlMessage::CopyFrom(const ControlMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.ControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ControlMessage::IsInitialized() const {
  return true;
}

void ControlMessage::InternalSwap(ControlMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlMessage, timestamp_)
      + sizeof(ControlMessage::timestamp_)
      - PROTOBUF_FIELD_OFFSET(ControlMessage, control_)>(
          reinterpret_cast<char*>(&control_),
          reinterpret_cast<char*>(&other->control_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ControlMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class AddRemoveEntityMessage::_Internal {
 public:
};

AddRemoveEntityMessage::AddRemoveEntityMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.AddRemoveEntityMessage)
}
AddRemoveEntityMessage::AddRemoveEntityMessage(const AddRemoveEntityMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(netid_));
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.AddRemoveEntityMessage)
}

void AddRemoveEntityMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AddRemoveEntityMessage_Tanks_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(netid_));
}

AddRemoveEntityMessage::~AddRemoveEntityMessage() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.AddRemoveEntityMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AddRemoveEntityMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AddRemoveEntityMessage::ArenaDtor(void* object) {
  AddRemoveEntityMessage* _this = reinterpret_cast< AddRemoveEntityMessage* >(object);
  (void)_this;
}
void AddRemoveEntityMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AddRemoveEntityMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AddRemoveEntityMessage& AddRemoveEntityMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AddRemoveEntityMessage_Tanks_2eproto.base);
  return *internal_default_instance();
}


void AddRemoveEntityMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.AddRemoveEntityMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty();
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&netid_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(netid_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AddRemoveEntityMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 netid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          netid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AddRemoveEntityMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.AddRemoveEntityMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (this->id().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // int32 netid = 3;
  if (this->netid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_netid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.AddRemoveEntityMessage)
  return target;
}

size_t AddRemoveEntityMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.AddRemoveEntityMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  // int32 netid = 3;
  if (this->netid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_netid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AddRemoveEntityMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.AddRemoveEntityMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AddRemoveEntityMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AddRemoveEntityMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.AddRemoveEntityMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.AddRemoveEntityMessage)
    MergeFrom(*source);
  }
}

void AddRemoveEntityMessage::MergeFrom(const AddRemoveEntityMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.AddRemoveEntityMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (from.netid() != 0) {
    _internal_set_netid(from._internal_netid());
  }
}

void AddRemoveEntityMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.AddRemoveEntityMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AddRemoveEntityMessage::CopyFrom(const AddRemoveEntityMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.AddRemoveEntityMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AddRemoveEntityMessage::IsInitialized() const {
  return true;
}

void AddRemoveEntityMessage::InternalSwap(AddRemoveEntityMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AddRemoveEntityMessage, netid_)
      + sizeof(AddRemoveEntityMessage::netid_)
      - PROTOBUF_FIELD_OFFSET(AddRemoveEntityMessage, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AddRemoveEntityMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class UpdateEntityMessage::_Internal {
 public:
};

UpdateEntityMessage::UpdateEntityMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  positioncomps_(arena),
  mapobjectcomps_(arena),
  scorecomps_(arena),
  clientnamecomps_(arena),
  healthcomps_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:ProtoMessaging.UpdateEntityMessage)
}
UpdateEntityMessage::UpdateEntityMessage(const UpdateEntityMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      positioncomps_(from.positioncomps_),
      mapobjectcomps_(from.mapobjectcomps_),
      scorecomps_(from.scorecomps_),
      clientnamecomps_(from.clientnamecomps_),
      healthcomps_(from.healthcomps_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_id(), 
      GetArena());
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:ProtoMessaging.UpdateEntityMessage)
}

void UpdateEntityMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_UpdateEntityMessage_Tanks_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  timestamp_ = PROTOBUF_LONGLONG(0);
}

UpdateEntityMessage::~UpdateEntityMessage() {
  // @@protoc_insertion_point(destructor:ProtoMessaging.UpdateEntityMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void UpdateEntityMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void UpdateEntityMessage::ArenaDtor(void* object) {
  UpdateEntityMessage* _this = reinterpret_cast< UpdateEntityMessage* >(object);
  (void)_this;
}
void UpdateEntityMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void UpdateEntityMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const UpdateEntityMessage& UpdateEntityMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_UpdateEntityMessage_Tanks_2eproto.base);
  return *internal_default_instance();
}


void UpdateEntityMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ProtoMessaging.UpdateEntityMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  positioncomps_.Clear();
  mapobjectcomps_.Clear();
  scorecomps_.Clear();
  clientnamecomps_.Clear();
  healthcomps_.Clear();
  id_.ClearToEmpty();
  timestamp_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateEntityMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .ProtoMessaging.PositionComponent positionComps = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_positioncomps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ProtoMessaging.MapObjectComponent mapObjectComps = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_mapobjectcomps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ProtoMessaging.ScoreComponent scoreComps = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_scorecomps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ProtoMessaging.ClientNameComponent clientNameComps = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_clientnamecomps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<50>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .ProtoMessaging.HealthComponent healthComps = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_healthcomps(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* UpdateEntityMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ProtoMessaging.UpdateEntityMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes id = 1;
  if (this->id().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_id(), target);
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_timestamp(), target);
  }

  // repeated .ProtoMessaging.PositionComponent positionComps = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_positioncomps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_positioncomps(i), target, stream);
  }

  // repeated .ProtoMessaging.MapObjectComponent mapObjectComps = 4;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_mapobjectcomps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, this->_internal_mapobjectcomps(i), target, stream);
  }

  // repeated .ProtoMessaging.ScoreComponent scoreComps = 5;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_scorecomps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, this->_internal_scorecomps(i), target, stream);
  }

  // repeated .ProtoMessaging.ClientNameComponent clientNameComps = 6;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_clientnamecomps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, this->_internal_clientnamecomps(i), target, stream);
  }

  // repeated .ProtoMessaging.HealthComponent healthComps = 7;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_healthcomps_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, this->_internal_healthcomps(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ProtoMessaging.UpdateEntityMessage)
  return target;
}

size_t UpdateEntityMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ProtoMessaging.UpdateEntityMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .ProtoMessaging.PositionComponent positionComps = 3;
  total_size += 1UL * this->_internal_positioncomps_size();
  for (const auto& msg : this->positioncomps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoMessaging.MapObjectComponent mapObjectComps = 4;
  total_size += 1UL * this->_internal_mapobjectcomps_size();
  for (const auto& msg : this->mapobjectcomps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoMessaging.ScoreComponent scoreComps = 5;
  total_size += 1UL * this->_internal_scorecomps_size();
  for (const auto& msg : this->scorecomps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoMessaging.ClientNameComponent clientNameComps = 6;
  total_size += 1UL * this->_internal_clientnamecomps_size();
  for (const auto& msg : this->clientnamecomps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .ProtoMessaging.HealthComponent healthComps = 7;
  total_size += 1UL * this->_internal_healthcomps_size();
  for (const auto& msg : this->healthcomps_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // bytes id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_id());
  }

  // int64 timestamp = 2;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_timestamp());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void UpdateEntityMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ProtoMessaging.UpdateEntityMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const UpdateEntityMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<UpdateEntityMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ProtoMessaging.UpdateEntityMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ProtoMessaging.UpdateEntityMessage)
    MergeFrom(*source);
  }
}

void UpdateEntityMessage::MergeFrom(const UpdateEntityMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ProtoMessaging.UpdateEntityMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  positioncomps_.MergeFrom(from.positioncomps_);
  mapobjectcomps_.MergeFrom(from.mapobjectcomps_);
  scorecomps_.MergeFrom(from.scorecomps_);
  clientnamecomps_.MergeFrom(from.clientnamecomps_);
  healthcomps_.MergeFrom(from.healthcomps_);
  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
  if (from.timestamp() != 0) {
    _internal_set_timestamp(from._internal_timestamp());
  }
}

void UpdateEntityMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ProtoMessaging.UpdateEntityMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UpdateEntityMessage::CopyFrom(const UpdateEntityMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ProtoMessaging.UpdateEntityMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateEntityMessage::IsInitialized() const {
  return true;
}

void UpdateEntityMessage::InternalSwap(UpdateEntityMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  positioncomps_.InternalSwap(&other->positioncomps_);
  mapobjectcomps_.InternalSwap(&other->mapobjectcomps_);
  scorecomps_.InternalSwap(&other->scorecomps_);
  clientnamecomps_.InternalSwap(&other->clientnamecomps_);
  healthcomps_.InternalSwap(&other->healthcomps_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateEntityMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ProtoMessaging
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ProtoMessaging::ControlComponent* Arena::CreateMaybeMessage< ::ProtoMessaging::ControlComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::ControlComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::PositionComponent* Arena::CreateMaybeMessage< ::ProtoMessaging::PositionComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::PositionComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::MapObjectComponent* Arena::CreateMaybeMessage< ::ProtoMessaging::MapObjectComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::MapObjectComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::ScoreComponent* Arena::CreateMaybeMessage< ::ProtoMessaging::ScoreComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::ScoreComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::ClientNameComponent* Arena::CreateMaybeMessage< ::ProtoMessaging::ClientNameComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::ClientNameComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::HealthComponent* Arena::CreateMaybeMessage< ::ProtoMessaging::HealthComponent >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::HealthComponent >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::ControlMessage* Arena::CreateMaybeMessage< ::ProtoMessaging::ControlMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::ControlMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::AddRemoveEntityMessage* Arena::CreateMaybeMessage< ::ProtoMessaging::AddRemoveEntityMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::AddRemoveEntityMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::ProtoMessaging::UpdateEntityMessage* Arena::CreateMaybeMessage< ::ProtoMessaging::UpdateEntityMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::ProtoMessaging::UpdateEntityMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
